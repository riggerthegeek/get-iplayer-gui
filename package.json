{
  "name": "get-iplayer-gui",
  "version": "0.0.0",
  "description": "GUI for get-iplayer",
  "main": "./src/main",
  "scripts": {
    "clean": "rm -Rf build coverage src/scripts/config.js src/scripts/templates.js src/scripts/themes.js src/styles/*.css* src/styles/*.scss tmp",
    "ci": "npm test -s && npm run compile -s",
    "compile": "npm run precompile && electron-packager tmp --icon src/assets/img/logo.png --platform linux,win32 --arch ia32,x64,armv7l --out build --overwrite true --ignore .idea && npm run compile:mac",
    "compile:mac": "electron-packager tmp --icon src/assets/img/logo.icns --platform=darwin --arch=x64 --out build --overwrite true --ignore .idea",
    "compile:templates": "npm-html2js --input src/views/**/**/*.html --output src/scripts/templates.js --module templates.nodedb",
    "compile:tests": "babel test --source-maps true --out-dir tmp/test",
    "copy": "npm run copy:assets; npm run copy:index; npm run copy:translate; npm run copy:pkg",
    "copy:assets": "cp -Rf src/assets tmp/src",
    "copy:index": "cp src/index.html tmp/src",
    "copy:pkg": "cp package.json tmp/package.json",
    "copy:translate": "cp -Rf src/scripts/translations tmp/src/scripts",
    "coverage": "cross-env NODE_ENV=test nyc mocha --compilers js:babel-register --ui bdd --recursive test/unit --require-main jsdom-global/register",
    "dist": "npm run dist:clean -s && npm run dist:rename -s && mkdir -p dist && npm run dist:compress",
    "dist:clean": "rm -Rf build/**/LICENSE; rm -Rf build/**/LICENSES.chromium.html; rm -Rf build/**/version",
    "dist:compress": "npm run dist:compress:armv7l && npm run dist:compress:linux32 && npm run dist:compress:linux64 && npm run dist:compress:osx && npm run dist:compress:win32 && npm run dist:compress:win64;",
    "dist:compress:armv7l": "cd build && tar -zcf ../dist/armv7l.tar.gz armv7l/ && cd ..",
    "dist:compress:linux32": "cd build && tar -zcf ../dist/linux32.tar.gz linux32/ && cd ..",
    "dist:compress:linux64": "cd build && tar -zcf ../dist/linux64.tar.gz linux64/ && cd ..",
    "dist:compress:osx": "cd build && tar -zcf ../dist/osx.tar.gz osx/ && cd ..",
    "dist:compress:win32": "cd build && zip -rq ../dist/win32.zip win32/ && cd ..",
    "dist:compress:win64": "cd build && zip -rq ../dist/win64.zip win64/ && cd ..",
    "dist:rename": "mv build/NodeDB-darwin-x64 build/osx; mv build/NodeDB-linux-armv7l build/armv7l; mv build/NodeDB-linux-ia32 build/linux32; mv build/NodeDB-linux-x64 build/linux64; mv build/NodeDB-win32-ia32 build/win32; mv build/NodeDB-win32-x64 build/win64",
    "postversion": "git push --tags && git push",
    "precompile": "npm run clean && npm run config && npm run compile:templates && npm run css:generate && npm run precompile:js; npm run precompile:css; npm run copy && cd tmp && npm install --only=production && cd .. ",
    "precompile:css": "npm run css:generate && node-sass src/styles --recursive --output tmp/src/styles/ --source-map true --output-style compressed",
    "precompile:js": "babel src --out-dir ./tmp/src --source-maps true",
    "serve": "npm run compile:templates && npm run serve:sass:compile && concurrently 'npm run serve:templates -s' 'npm run serve:sass -s' 'npm run serve:electron'",
    "serve:dist": "npm run precompile && npm run compile:mac && SHOW_DEV_TOOLS=1 ./build/NodeDB-darwin-x64/NodeDB.app/Contents/MacOS/NodeDB",
    "serve:electron": "DEBUG=-electron-compile:* SHOW_DEV_TOOLS=1 electron .",
    "serve:sass": "nodemon --watch src/styles --ignore src/styles/*.scss --ext scss --exec 'npm run serve:sass:compile' --legacy-watch",
    "serve:sass:compile": "node-sass src/styles --recursive --output src/styles/ --source-map true",
    "serve:templates": "nodemon --watch src/views --ext html --exec 'npm run compile:templates' --legacy-watch",
    "test": "npm run test:lint -s && npm run test:unit -s",
    "test:lint": "eslint src",
    "test:unit": "electron-mocha --compilers js:babel-register --check-leaks --throw-deprecation --ui bdd --recursive test/unit --require-main jsdom-global/register",
    "watch:coverage": "nodemon --ignore tmp --exec 'npm run coverage -s' --legacy-watch",
    "watch:test": "nodemon --exec 'npm run test -s' --legacy-watch",
    "watch:test:lint": "nodemon --exec 'npm run test:lint -s' --legacy-watch",
    "watch:test:unit": "nodemon --exec 'npm run test:unit -s' --legacy-watch"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/riggerthegeek/get-iplayer-gui.git"
  },
  "author": "Simon Emms <simon@slashdevslashnull.it>",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/riggerthegeek/get-iplayer-gui/issues"
  },
  "homepage": "https://github.com/riggerthegeek/get-iplayer-gui#readme",
  "dependencies": {
    "angular": "^1.6.1",
    "angular-hotkeys": "^1.7.0",
    "angular-sanitize": "^1.6.1",
    "angular-translate": "^2.13.1",
    "angular-ui-router": "^0.3.2",
    "angular-ui-router.statehelper": "^1.3.1",
    "datautils": "^3.1.8",
    "electron-compile": "^5.0.0",
    "jquery": "^2.2.4",
    "lodash": "^4.17.2"
  },
  "devDependencies": {
    "babel-cli": "^6.18.0",
    "babel-eslint": "^7.1.1",
    "babel-plugin-istanbul": "^3.0.0",
    "babel-preset-latest": "^6.16.0",
    "bootstrap-sass": "^3.3.7",
    "bootswatch": "^3.3.7",
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "concurrently": "^3.1.0",
    "cross-env": "^3.1.3",
    "electron": "^1.4.13",
    "electron-compilers": "^4.0.7",
    "electron-mocha": "^3.3.0",
    "electron-packager": "^8.4.0",
    "electron-prebuilt-compile": "^1.4.12",
    "eslint": "^3.12.2",
    "font-awesome": "^4.7.0",
    "jsdom": "^9.9.1",
    "jsdom-global": "^2.1.1",
    "node-sass": "^4.1.1",
    "nodemon": "^1.11.0",
    "npm-html2js": "^0.1.8",
    "nyc": "^10.0.0",
    "proxyquire": "^1.7.10",
    "sinon": "^1.17.6",
    "sinon-as-promised": "^4.0.2",
    "sinon-chai": "^2.8.0"
  },
  "private": true
}
